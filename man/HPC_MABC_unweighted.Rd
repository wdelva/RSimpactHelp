% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/HPC_MABC_unweighted.R
\name{HPC_MABC_unweighted}
\alias{HPC_MABC_unweighted}
\title{HPC-version of MABC (MICE ABC)}
\usage{
HPC_MABC_unweighted(targets.empirical = dummy.targets.empirical,
  previous.experiments, file.name, RMSD.tol.max = 2, min.givetomice = 12,
  n.experiments = 48, lls, uls, strict.positive.params = 0,
  probability.params = 0, inside_prior = TRUE, method = "norm",
  predictorMatrix = "complete", maxit = 20)
}
\arguments{
\item{targets.empirical}{The vector of target features}

\item{previous.experiments}{Dataframe that stores completed experiments
and their associated model features}

\item{file.name}{Path to csv file that will store the proposed experiments}

\item{RMSD.tol.max}{Tolerance for the root mean squared distance between
target features and model output features}

\item{min.givetomice}{Minimal number of observations in the training dataset
to which MICE is applied}

\item{n.experiments}{Number of proposed experiments to be produced}

\item{lls}{Vector of lower limits of the prior distribution of input
parameter values}

\item{uls}{Vector of upper limits of the prior distribution of input
parameter values}

\item{strict.positive.params}{Vector of indices that indicate which of the
input parameters are strictly positive. Set to zero if there are no such
parameters.}

\item{probability.params}{Vector of indices that indicate which of the input
parameters are strictly between 0 and 1. Set to zero if there are no such
parameters.}

\item{inside_prior}{TRUE by default. If FALSE, parameter sampling is not
restricted to the initial ranges of the prior distribution during the
subsequent algorithm steps.}

\item{method}{Method used by MICE. E.g. "norm" or "rf"}

\item{predictorMatrix}{Can be "complete", "LASSO", or a user-defined matrix
of indices that indicate which variables are included in the chained
equations in MICE}

\item{maxit}{The maxit argument used in MICE (number of times that the
chained equations are cycled through)}
}
\value{
A dataframe with proposed input parameter values to match a vector of
  target features.
}
\description{
Produces a csv file of proposed experiments (input parameter values) to match
a vector of target features.
}
\details{
This version starts from a dataframe of completed experiments and their
associated model features.
}
\examples{
features.pop.growth <- exp(0.015)
features.hiv.prev <- c(0.143, 0.008, 0.315, 0.066, 0.467, 0.213, 0.538, 0.366, 0.491, 0.47, 0.397, 0.455, 0.316, 0.425)
features.hiv.inc <- exp(c(0.038, 0.008, 0.043, 0.016, 0.02, 0.026, 0.027, 0.031, 0.04, 0.004, 0.021, 0.012, 0.012, 0))
features.art.cov <- c(0.33, 0.38, 0.45, 0.51, 0.61, 0.7, 0.8)
features.vl.suppr <- 0.68
target.features.EAAA <- c(features.pop.growth, features.hiv.prev, features.hiv.inc, features.art.cov, features.vl.suppr)
priors.EAAA <-list(c("unif", 1.0, 1.5), # hivtransmission.param.f1 = 1.1
c("unif", 0.0, 0.5), # formation.hazard.agegapry.gap_agescale_man and ~_woman = 0.25
c("unif", -3.0, 3.0), # person.agegap.man.dist.normal.mu and ~.woman.~ = 0
c("unif", 1.0, 5.0), # person.agegap.man.dist.normal.sigma and ~.woman.~ = 2.5
c("unif", 0.1, 1.5), # person.eagerness.man.dist.gamma.a = 0.23
c("unif", 0.1, 1.5), # person.eagerness.woman.dist.gamma.a = 0.23
c("unif", 10.0, 80), # person.eagerness.man.dist.gamma.b = 45
c("unif", 10.0, 80), # person.eagerness.woman.dist.gamma.b = 45
c("unif", -2, -0.2), # formation.hazard.agegapry.gap_factor_man_exp and ~_woman_~ = -0.7
c("unif", -1.0, 5.0), # formation.hazard.agegapry.baseline = 2.8
c("unif", -1, -0.05), # formation.hazard.agegapry.numrel_man = -0.5
c("unif", -1, -0.05), # formation.hazard.agegapry.numrel_woman = -0.5
c("unif", -5, -1.0), # conception.alpha_base = -2.7
c("unif", -2, 1)) # dissolution.alpha_0 = -0.52
prior.boundaries.booleans <- !unlist(priors.EAAA) \%in\% "unif"
boundaries.matrix <- unlist(priors.EAAA)[prior.boundaries.booleans] \%>\% as.numeric() \%>\% matrix(byrow = TRUE, ncol = 2)
nextwave.df <- HPC_MABC(targets.empirical = target.features.EAAA,
previous.experiments = data("input.output.EAAA.RData"),
file.name = "/temp/wave2.csv",
RMSD.tol.max = 2,
min.givetomice = 40,
n.experiments = 800,
lls = boundaries.matrix[, 1],
uls = boundaries.matrix[, 2],
strict.positive.params = 0,
probability.params = 0,
inside_prior = TRUE,
method = "norm",
predictorMatrix = "LASSO",
maxit = 20)

}
